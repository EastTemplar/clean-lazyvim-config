{
  "Main Function": {
    "prefix": "main",
    "body": [
      "#include <iostream>",
      "#include <cstdint>",
      "",
      "int32_t main() {",
      "    std::ios_base::sync_with_stdio(false);",
      "    std::cin.tie(nullptr);",
      "    std::cout.tie(nullptr);",
      "    ${0:// code here}",
      "    return 0;",
      "}"
    ],
    "description": "Basic C++ main function with fast IO"
  },
  "Cout Line": {
    "prefix": "cl",
    "body": "std::cout << ${1:message} << \"\\n\";",
    "description": "Print a line using std::cout"
  },
  "Cin n": {
    "prefix": "cinn",
    "body": [
      "int32_t n;",
      "std::cin<< n;"
    ],
    "description": "Get std::cin"
  },
  "Creation": {
    "prefix": "crarr",
    "body": [
      "${0}** ${1} = new ${0}*[${3}];",
      "for (size_t i = 0; i < ${3}; ++i) {",
      "    ${1}[i] = new ${0}[${3}];",
      "}",
      ""
    ],
    "description": "Basic C++ main function with fast IO"
  },
  "Deletion": {
    "prefix": "del",
    "body": [
      "for (size_t i = 0; i < ${1:n}; ++i) {",
      "    delete[] ${0}[i];",
      "}",
      "",
      "delete[] ${0};"
    ],
    "description": "Basic C++ main function with fast IO"
  },
  "For Loop (i)": {
    "prefix": "fori",
    "body": [
      "for (size_t ${1} = 0; ${1} < ${2}; ++${1}) {",
      "    ${0}",
      "}"
    ],
    "description": "A standard for loop iterating from 0 to n-1"
  },
  "For Loop Backwards(length)": {
    "prefix": "forb",
    "body": [
      "for (size_t i = ${1}-1; i >= 0; --i) {",
      "    ${2}",
      "}"
    ],
    "description": "A standard for loop iterating from 0 to n-1"
  },
  "If Statement": {
    "prefix": "if",
    "body": [
      "if (${1:condition}) {",
      "    ${0:// body}",
      "}"
    ],
    "description": "If statement"
  },
  "Function": {
    "prefix": "fun",
    "body": [
      "${1:return_type} ${2:function_name}(${3:parameters}) {",
      "    ${0:// body}",
      "}"
    ],
    "description": "Define a function"
  },
  "Class": {
    "prefix": "class",
    "body": [
      "class ${1:ClassName} {",
      "public:",
      "    ${1:ClassName}() {",
      "        ${0:// constructor body}",
      "    }",
      "private:",
      "};"
    ],
    "description": "Create a new class"
  },
  "Struct": {
    "prefix": "struct",
    "body": [
      "struct ${1:StructName} {",
      "    ${0:// struct body}",
      "};"
    ],
    "description": "Create a new struct"
  }
}
